"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoLHuman = void 0;
const constant_1 = require("../constant");
const utils_1 = require("../utils");
const FormData = require("form-data");
class LoLHuman {
    constructor(apikey) {
        this.apikey = apikey;
        this.client = new utils_1.Client(constant_1.API_URL, this.apikey);
    }
    youtubeSearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ytsearch', { query });
        });
    }
    youtubeAudio(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ytaudio', { url });
        });
    }
    youtubeVideo(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ytvideo', { url });
        });
    }
    youtubeAudio2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ytaudio2', { url });
        });
    }
    youtubeVideo2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ytvideo2', { url });
        });
    }
    youtubePlay(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ytplay', { query });
        });
    }
    tiktokMusic(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/tiktokmusic', { url }, { responseType: 'arraybuffer' });
        });
    }
    tiktokWM(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/tiktokwm', { url }, { responseType: 'arraybuffer' });
        });
    }
    tiktokNoWM(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/tiktok', { url });
        });
    }
    tiktokNoWM2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/tiktok2', { url });
        });
    }
    tiktokNoWM3(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/tiktok3', { url });
        });
    }
    facebook(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/facebook', { url });
        });
    }
    facebook2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/facebook', { url });
        });
    }
    joox(joox_id) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/joox/${joox_id}`);
        });
    }
    jooxPlay(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/jooxplay', { query });
        });
    }
    spotify(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/spotify', { url });
        });
    }
    spotifySearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/spotifysearch', { query });
        });
    }
    twitterImage(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/twitterimage', { url });
        });
    }
    twitterVideo(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/twitter', { url });
        });
    }
    twitterVideo2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/twitter2', { url });
        });
    }
    instagram(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/instagram', { url });
        });
    }
    instagram2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/instagram2', { url });
        });
    }
    instagramReel(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/instagramreel', { url });
        });
    }
    instagramHighlights(username) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/highlights/${username}`);
        });
    }
    instagramStory(username) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/igstory/${username}`);
        });
    }
    cocofun(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/cocofun', { url });
        });
    }
    smule(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/smule', { url });
        });
    }
    sharechat(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/sharechat', { url });
        });
    }
    pinterestDL(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/pinterestdl', { url });
        });
    }
    pinterestVideo(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/pinterestvideo', { url });
        });
    }
    telestick(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/telestick', { url });
        });
    }
    linestick(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/linestick', { url });
        });
    }
    zippyshare(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/zippyshare', { url });
        });
    }
    mediafire(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/mediafire', { url });
        });
    }
    solidfiles(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/solidfiles', { url });
        });
    }
    apkDownloader(pkg) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/apkdownloader', { package: pkg });
        });
    }
    xnxx(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/xnxx', { url });
        });
    }
    xnxxSearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/xnxxsearch', { query });
        });
    }
    pixivDL(pixiv_id) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/pixivdl/${pixiv_id}`, {}, { responseType: 'arraybuffer' });
        });
    }
    quran(surah, ayat) {
        return __awaiter(this, void 0, void 0, function* () {
            if (surah && ayat) {
                return this.client.get(`/quran/${surah}/${ayat}`);
            }
            if (surah) {
                return this.client.get(`/quran/${surah}`);
            }
            return this.client.get('/quran');
        });
    }
    quranAudio(surah, ayat) {
        return __awaiter(this, void 0, void 0, function* () {
            if (ayat) {
                return this.client.get(`/quran/audio/${surah}/${ayat}`, {}, { responseType: 'arraybuffer' });
            }
            return this.client.get(`/quran/audio/${surah}`, {}, { responseType: 'arraybuffer' });
        });
    }
    haditsSearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/hadits/search', { query });
        });
    }
    haditsDetail(kitab, nomor) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/hadits/detail/${kitab}/${nomor}`);
        });
    }
    jadwalSholat(daerah) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/sholat/${daerah}`);
        });
    }
    niatSholat(sholat) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/niatsholat/${sholat}`);
        });
    }
    asmaulHusna() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/asmaulhusna');
        });
    }
    kisahNabi(nabi) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/kisahnabi/${nabi}`);
        });
    }
    lk21(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/lk21', { query });
        });
    }
    drakor(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/drakor', { query });
        });
    }
    drakorOngoing() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/drakorongoing');
        });
    }
    wattpad(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/wattpad', { url });
        });
    }
    wattpadSearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/wattpadsearch', { query });
        });
    }
    webtoon(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/webtoon', { url });
        });
    }
    mangatoon(url) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/mangatoon', { url });
        });
    }
    cerpen() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/cerpen');
        });
    }
    ceritaHoror() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/ceritahoror');
        });
    }
    textprome(type, text) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/textprome/${type}`, { text }, { responseType: 'arraybuffer' });
        });
    }
    textprome2(type, text1, text2) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/textprome2/${type}`, { text1, text2 }, { responseType: 'arraybuffer' });
        });
    }
    photooxy1(type, text) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/photooxy1/${type}`, { text }, { responseType: 'arraybuffer' });
        });
    }
    photooxy2(type, text1, text2) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/photooxy2/${type}`, { text1, text2 }, { responseType: 'arraybuffer' });
        });
    }
    ephoto1(type, text) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/ephoto1/${type}`, { text }, { responseType: 'arraybuffer' });
        });
    }
    ephoto2(type, text1, text2) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get(`/ephoto2/${type}`, { text1, text2 }, { responseType: 'arraybuffer' });
        });
    }
    konachan(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/konachan', { query }, { responseType: 'arraybuffer' });
        });
    }
    danbooru(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/danbooru', { query }, { responseType: 'arraybuffer' });
        });
    }
    wallpaper(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/wallpaper', { query });
        });
    }
    wallpaper2(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/wallpaper2', { query });
        });
    }
    wallpaper3(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/wallpaper3', { query });
        });
    }
    gsearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/gsearch', { query });
        });
    }
    gimage(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/gimage', { query }, { responseType: 'arraybuffer' });
        });
    }
    gimage2(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/gimage2', { query });
        });
    }
    stickerwa(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/stickerwa', { query });
        });
    }
    pinterest(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/pinterest', { query });
        });
    }
    pinterest2(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/pinterest2', { query });
        });
    }
    pixiv(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/pixiv', { query }, { responseType: 'arraybuffer' });
        });
    }
    pixiv2(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/pixiv2', { query });
        });
    }
    unsplash(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/unsplash', { query });
        });
    }
    reverseYandex(img) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/reverseyandex', { img });
        });
    }
    googleReverse(img) {
        return __awaiter(this, void 0, void 0, function* () {
            var formData = new FormData();
            formData.append('img', img, { filename: 'test.jpg' });
            return this.client.post('/googlereverse', formData);
        });
    }
    musicSearch(file) {
        return __awaiter(this, void 0, void 0, function* () {
            var formData = new FormData();
            formData.append('file', file, { filename: 'test.mp3' });
            return this.client.post('/musicsearch', formData);
        });
    }
    moddroid(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/moddroid', { query });
        });
    }
    domainSearch(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/moddroid', { query });
        });
    }
    domainCheck(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/domaincheck', { query });
        });
    }
    searchPlace(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/searchplace', { query });
        });
    }
    searchBijak(query) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.get('/searchbijak', { query });
        });
    }
}
exports.LoLHuman = LoLHuman;
